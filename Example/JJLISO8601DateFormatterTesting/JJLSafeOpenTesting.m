//Copyright (c) 2018 Michael Eisel. All rights reserved.

#import <Foundation/Foundation.h>
#import <XCTest/XCTest.h>

@interface JJLSafeOpenTesting : XCTestCase

@end

@implementation JJLSafeOpenTesting

- (void)setUp {
    [super setUp];
}

static const int kJJLUnrecoverableError = EIO; // Some arbitrary error that isn't EINTR

typedef int (*JJLOpenFunction)(void);

int JJLSafeOpenInjection(const char *path, int mode, int (*openPtr)(const char *path, int mode, ...));

static NSInteger sOpenIndex = 0;
static JJLOpenFunction *sOpens = NULL;
static NSInteger sOpensLength = 0;

static int JJLNextOpen(const char *path, int mode, ...) {
    NSCAssert(sOpenIndex < sOpensLength, @"Went too far");
    int ret = sOpens[sOpenIndex]();
    sOpenIndex++;
    return ret;
}

static int JJLInterruptedOpen() {
    errno = EINTR;
    return -1;
}

static int JJLErrorOpen() {
    errno = kJJLUnrecoverableError;
    return -1;
}

static int JJLSuccessfulOpen() {
    return 3;
}

- (void)_testWithOpens:(JJLOpenFunction[])opens opensLength:(NSInteger)opensLength expectedErrno:(int)expectedErrno {
    sOpens = opens;
    sOpenIndex = 0;
    sOpensLength = opensLength;
    int fd = JJLSafeOpenInjection("", 0, JJLNextOpen);
    XCTAssert(sOpenIndex == sOpensLength);
    if (expectedErrno == 0) {
        XCTAssert(fd > 0);
    } else {
        XCTAssert(errno == expectedErrno);
    }
}

- (void)testSafeOpen
{
    [self _testWithOpens:(JJLOpenFunction[]){JJLSuccessfulOpen} opensLength:1 expectedErrno:0];
    [self _testWithOpens:(JJLOpenFunction[]){JJLInterruptedOpen, JJLSuccessfulOpen} opensLength:2 expectedErrno:0];
    [self _testWithOpens:(JJLOpenFunction[]){JJLInterruptedOpen, JJLInterruptedOpen, JJLErrorOpen} opensLength:3 expectedErrno:kJJLUnrecoverableError];
    [self _testWithOpens:(JJLOpenFunction[]){JJLErrorOpen} opensLength:1 expectedErrno:kJJLUnrecoverableError];
}

@end
